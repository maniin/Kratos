<?xml version="1.0" encoding="utf-8"?>
<container n="StageInfo" pn="Model information" help="Stage information" icon="analysis" state="normal" open_window="0">
    <!-- <value n="SolutionType" pn="Solver Type" un="STSoluType" v="Static" values="Static,Quasi-static,Dynamic,eigen_value,formfinding" dict="Static,Static,Quasi-static,Quasi-static,Dynamic,Dynamic,eigen_value,Eigenvalue,formfinding,Formfinding" help="Solution type" actualize_tree="1" > -->
    <value n="SolutionType" pn="Solver Type" un="STSoluType" v="Static" values="Static,Quasi-static,Dynamic,eigen_value" dict="Static,Static,Quasi-static,Quasi-static,Dynamic,Dynamic,eigen_value,Eigenvalue" help="Solution type" actualize_tree="1" >
        <dependencies value="formfinding" node="../value[@n='AnalysisType']" att1="values" v1="non_linear"/>
        <dependencies condition="@v!='formfinding'" node="../value[@n='AnalysisType']" att1="values" v1="linear,non_linear"/>
    </value>
    <value n="SolStratCombo" pn="Time integration method" un="STSolStrat" v="" values="" dict="[GetSolutionStrategiesStructural]" actualize_tree="1" state="[getStateFromXPathValue {string(../value[@n='SolutionType']/@v)} Dynamic]"/>
    <value n="Scheme" pn="Scheme" un="STScheme" v="" values="" dict="[GetSchemes]" state="[getStateFromXPathValue {string(../value[@n='SolutionType']/@v)} Dynamic,eigen_value]" actualize_tree="1"/>
    <value n="AnalysisType" pn="Analysis type" un="STAnalysisType" v="non_linear" values="linear,non_linear" dict="linear,Linear,non_linear,Nonlinear" help="Analysis type" state="[getStateFromXPathValue {string(../value[@n='SolutionType']/@v)} Static,Quasi-static,Dynamic,formfinding]"/>
</container>
